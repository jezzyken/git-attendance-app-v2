(function(){"use strict";var e={9899:function(e,t,a){var r=a(5471),n=a(5668),s=function(){var e=this,t=e._self._c;return t(n.A,[t("router-view")],1)},c=[],o={name:"App"},d=o,u=a(1656),l=(0,u.A)(d,s,c,!1,null,null,null),i=l.exports,E=a(173),R=a(5353),S=(a(4114),a(4335));const h="/api/v1",T=S.A.create({baseURL:h});T.interceptors.request.use((e=>{const t=localStorage.getItem("token");return t&&(e.headers.Authorization=`Bearer ${t}`),e}),(e=>Promise.reject(e))),T.interceptors.response.use((e=>e),(e=>(401===e.response?.status&&localStorage.removeItem("token"),Promise.reject(e))));var _=T,m={login(e){return _.post("/auth/login",e)},register(e){return _.post("/user",e)},getCurrentUser(){return _.get("/auth/me")}},A={namespaced:!0,state:{token:localStorage.getItem("token")||null,user:null,loading:!1,error:null},getters:{isAuthenticated:e=>!!e.token,user:e=>e.user,loading:e=>e.loading,error:e=>e.error},mutations:{SET_TOKEN(e,t){e.token=t},SET_USER(e,t){e.user=t},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_AUTH(e){e.token=null,e.user=null,e.error=null}},actions:{async login({commit:e},t){try{e("SET_LOADING",!0);const a=await m.login(t),{token:r,user:n}=a.data.data;localStorage.setItem("token",r),localStorage.setItem("user",JSON.stringify({_id:n._id})),e("SET_TOKEN",r),e("SET_USER",n),x.push("/dashboard")}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Login failed"),a}finally{e("SET_LOADING",!1)}},logout({commit:e}){localStorage.removeItem("token"),localStorage.removeItem("user"),e("CLEAR_AUTH"),x.push("/login")}}},p={getUsers(){return _.get("/user")},getUser(e){return _.get(`/user/${e}`)},getUserByEmail(e){return _.get(`/user/email/${e}`)},getUsersByRole(e){return _.get(`/user/role/${e}`)},createUser(e){return _.post("/user",e)},updateUser(e,t){return _.patch(`/user/${e}`,t)},deleteUser(e){return _.delete(`/user/${e}`)},toggleUserStatus(e){return _.patch(`/user/${e}/toggle-status`)}},f={namespaced:!0,state:{users:[],currentUser:null,loading:!1,error:null},getters:{users:e=>e.users,currentUser:e=>e.currentUser,loading:e=>e.loading,error:e=>e.error},mutations:{SET_USERS(e,t){e.users=t},SET_CURRENT_USER(e,t){e.currentUser=t},ADD_USER(e,t){e.users.push(t)},UPDATE_USER(e,t){const a=e.users.findIndex((e=>e._id===t._id));-1!==a&&e.users.splice(a,1,t)},REMOVE_USER(e,t){e.users=e.users.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchUsers({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await p.getUsers();console.log(t.data.data.users),e("SET_USERS",t.data.data.users)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch users"),t}finally{e("SET_LOADING",!1)}},async fetchUser({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await p.getUser(t);return e("SET_CURRENT_USER",a.data.data.user),a.data.data.user}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch user"),a}finally{e("SET_LOADING",!1)}},async createUser({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await p.createUser(t);return e("ADD_USER",a.data.data.user),a.data.data.user}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create user"),a}finally{e("SET_LOADING",!1)}},async updateUser({commit:e},{id:t,userData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await p.updateUser(t,a);return e("UPDATE_USER",r.data.data.user),r.data.data.user}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update user"),r}finally{e("SET_LOADING",!1)}},async deleteUser({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await p.deleteUser(t),e("REMOVE_USER",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete user"),a}finally{e("SET_LOADING",!1)}},async getUser({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await p.getUser(t);return a.data.data.user}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch user"),a}finally{e("SET_LOADING",!1)}},async getUserByEmail({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await p.getUserByEmail(t);return a.data.data.user}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch user"),a}finally{e("SET_LOADING",!1)}},async getUsersByRole({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await p.getUsersByRole(t);return e("SET_USERS",a.data.data.users),a.data.data.users}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch users"),a}finally{e("SET_LOADING",!1)}},async toggleUserStatus({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await p.toggleUserStatus(t);return e("UPDATE_USER",a.data.data.user),a.data.data.user}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to toggle user status"),a}finally{e("SET_LOADING",!1)}}}},g={getDashboardData(){return _.get("/dashboard/data")},getRecentActivities(){return _.get("/dashboard/activities")},getWeeklyAttendance(){return _.get("/dashboard/weekly-attendance")},getClassDistribution(){return _.get("/dashboard/class-distribution")}},D={namespaced:!0,state:{dashboardData:null,recentActivities:[],weeklyAttendance:[],classDistribution:[],loading:!1,error:null},getters:{totalStudents:e=>e.dashboardData?.studentCount||0,totalTeachers:e=>e.dashboardData?.teacherCount||0,totalClasses:e=>e.dashboardData?.classCount||0,attendanceRate:e=>e.dashboardData?.attendanceRate||0,isLoading:e=>e.loading},mutations:{SET_DASHBOARD_DATA(e,t){e.dashboardData=t},SET_RECENT_ACTIVITIES(e,t){e.recentActivities=t},SET_WEEKLY_ATTENDANCE(e,t){e.weeklyAttendance=t},SET_CLASS_DISTRIBUTION(e,t){e.classDistribution=t},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t}},actions:{async fetchDashboardData({commit:e}){e("SET_LOADING",!0);try{const{data:t}=await g.getDashboardData();return console.log(t),e("SET_DASHBOARD_DATA",t.data),t}catch(t){throw e("SET_ERROR",t.message),t}finally{e("SET_LOADING",!1)}},async fetchRecentActivities({commit:e}){try{const{data:t}=await g.getRecentActivities();return e("SET_RECENT_ACTIVITIES",t),t}catch(t){throw e("SET_ERROR",t.message),t}},async fetchWeeklyAttendance({commit:e}){try{const{data:t}=await g.getWeeklyAttendance();return e("SET_WEEKLY_ATTENDANCE",t),t}catch(t){throw e("SET_ERROR",t.message),t}},async fetchClassDistribution({commit:e}){try{const{data:t}=await g.getClassDistribution();return e("SET_CLASS_DISTRIBUTION",t),t}catch(t){throw e("SET_ERROR",t.message),t}}}},O={getDepartments(){return _.get("/department")},getDepartment(e){return _.get(`/department/${e}`)},createDepartment(e){return _.post("/department",e)},updateDepartment(e,t){return _.patch(`/department/${e}`,t)},deleteDepartment(e){return _.delete(`/department/${e}`)}},y={namespaced:!0,state:{departments:[],currentDepartment:null,loading:!1,error:null},getters:{departments:e=>e.departments,currentDepartment:e=>e.currentDepartment,loading:e=>e.loading,error:e=>e.error},mutations:{SET_DEPARTMENTS(e,t){e.departments=t},SET_CURRENT_DEPARTMENT(e,t){e.currentDepartment=t},ADD_DEPARTMENT(e,t){e.departments.push(t)},UPDATE_DEPARTMENT(e,t){const a=e.departments.findIndex((e=>e._id===t._id));-1!==a&&e.departments.splice(a,1,t)},REMOVE_DEPARTMENT(e,t){e.departments=e.departments.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchDepartments({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await O.getDepartments();console.log(t),e("SET_DEPARTMENTS",t.data.data.departments)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch departments"),t}finally{e("SET_LOADING",!1)}},async fetchDepartment({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await O.getDepartment(t);e("SET_CURRENT_DEPARTMENT",a.data.data.department)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch department"),a}finally{e("SET_LOADING",!1)}},async createDepartment({commit:e},t){console.log(t);try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await O.createDepartment(t);return e("ADD_DEPARTMENT",a.data.data.department),a.data.data.department}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create department"),a}finally{e("SET_LOADING",!1)}},async updateDepartment({commit:e},{id:t,departmentData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await O.updateDepartment(t,a);return e("UPDATE_DEPARTMENT",r.data.data.department),r.data.data.department}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update department"),r}finally{e("SET_LOADING",!1)}},async deleteDepartment({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await O.deleteDepartment(t),e("REMOVE_DEPARTMENT",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete department"),a}finally{e("SET_LOADING",!1)}}}},L={getCourses(){return _.get("/course")},getCourse(e){return _.get(`/course/${e}`)},createCourse(e){return _.post("/course",e)},updateCourse(e,t){return _.patch(`/course/${e}`,t)},deleteCourse(e){return _.delete(`/course/${e}`)}},N={namespaced:!0,state:{courses:[],currentCourse:null,loading:!1,error:null},getters:{courses:e=>e.courses,currentCourse:e=>e.currentCourse,loading:e=>e.loading,error:e=>e.error},mutations:{SET_COURSES(e,t){e.courses=t},SET_CURRENT_COURSE(e,t){e.currentCourse=t},ADD_COURSE(e,t){e.courses.push(t)},UPDATE_COURSE(e,t){const a=e.courses.findIndex((e=>e._id===t._id));-1!==a&&e.courses.splice(a,1,t)},REMOVE_COURSE(e,t){e.courses=e.courses.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchCourses({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await L.getCourses();console.log(t),e("SET_COURSES",t.data.data.courses)}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch courses"),t}finally{e("SET_LOADING",!1)}},async fetchCourse({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await L.getCourse(t);e("SET_CURRENT_COURSE",a.data.data.course)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch course"),a}finally{e("SET_LOADING",!1)}},async fetchCourseByName({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await L.getCourseByName(t);e("SET_CURRENT_COURSE",a.data.data.course)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch course"),a}finally{e("SET_LOADING",!1)}},async createCourse({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await L.createCourse(t);return e("ADD_COURSE",a.data.data.course),a.data.data.course}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create course"),a}finally{e("SET_LOADING",!1)}},async updateCourse({commit:e},{id:t,courseData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await L.updateCourse(t,a);return e("UPDATE_COURSE",r.data.data.course),r.data.data.course}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update course"),r}finally{e("SET_LOADING",!1)}},async deleteCourse({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await L.deleteCourse(t),e("REMOVE_COURSE",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete course"),a}finally{e("SET_LOADING",!1)}}}},b={getSubjects(){return _.get("/subject")},getSubject(e){return _.get(`/subject/${e}`)},getSubjectByName(e){return _.get(`/subject/name/${e}`)},createSubject(e){return _.post("/subject",e)},updateSubject(e,t){return _.patch(`/subject/${e}`,t)},deleteSubject(e){return _.delete(`/subject/${e}`)}},C={namespaced:!0,state:{subjects:[],currentSubject:null,loading:!1,error:null},getters:{subjects:e=>e.subjects,currentSubject:e=>e.currentSubject,loading:e=>e.loading,error:e=>e.error},mutations:{SET_SUBJECTS(e,t){e.subjects=t},SET_CURRENT_SUBJECT(e,t){e.currentSubject=t},ADD_SUBJECT(e,t){e.subjects.push(t)},UPDATE_SUBJECT(e,t){const a=e.subjects.findIndex((e=>e._id===t._id));-1!==a&&e.subjects.splice(a,1,t)},REMOVE_SUBJECT(e,t){e.subjects=e.subjects.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchSubjects({commit:e}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const t=await b.getSubjects();return e("SET_SUBJECTS",t.data.data.subjects),t}catch(t){throw e("SET_ERROR",t.response?.data?.message||"Failed to fetch subjects"),t}finally{e("SET_LOADING",!1)}},async fetchSubject({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await b.getSubject(t);return e("SET_CURRENT_SUBJECT",a.data.data.subject),a}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch subject"),a}finally{e("SET_LOADING",!1)}},async createSubject({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await b.createSubject(t);return e("ADD_SUBJECT",a.data.data.subject),a}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create subject"),a}finally{e("SET_LOADING",!1)}},async updateSubject({commit:e},{id:t,subjectData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await b.updateSubject(t,a);return e("UPDATE_SUBJECT",r.data.data.subject),r}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update subject"),r}finally{e("SET_LOADING",!1)}},async deleteSubject({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await b.deleteSubject(t),e("REMOVE_SUBJECT",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete subject"),a}finally{e("SET_LOADING",!1)}}}},I={getStudents(){return _.get("/student")},getStudent(e){return _.get(`/student/${e}`)},createStudent(e){return _.post("/student",e)},updateStudent(e,t){return _.patch(`/student/${e}`,t)},deleteStudent(e){return _.delete(`/student/${e}`)}},w={namespaced:!0,state:{students:[],totalStudents:0,loading:!1,error:null},mutations:{SET_STUDENTS(e,t){e.students=t},SET_TOTAL_STUDENTS(e,t){e.totalStudents=t},ADD_STUDENT(e,t){e.students.push(t)},UPDATE_STUDENT(e,t){const a=e.students.findIndex((e=>e._id===t._id));-1!==a&&e.students.splice(a,1,t)},REMOVE_STUDENT(e,t){e.students=e.students.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t}},actions:{async fetchStudents({commit:e}){e("SET_LOADING",!0);try{const t=await I.getStudents();e("SET_STUDENTS",t.data.data.students),e("SET_TOTAL_STUDENTS",t.data.results)}catch(t){throw e("SET_ERROR",t.response?.data?.message),t}finally{e("SET_LOADING",!1)}},async createStudent({commit:e},t){e("SET_LOADING",!0);try{const a=await I.createStudent(t);return e("ADD_STUDENT",a.data.data.student),a.data.data.student}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async updateStudent({commit:e},{id:t,studentData:a}){e("SET_LOADING",!0);try{const r=await I.updateStudent(t,a);return e("UPDATE_STUDENT",r.data.data.student),r.data.data.student}catch(r){throw e("SET_ERROR",r.response?.data?.message),r}finally{e("SET_LOADING",!1)}},async deleteStudent({commit:e},t){e("SET_LOADING",!0);try{await I.deleteStudent(t),e("REMOVE_STUDENT",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}}}},U={getTeachers(){return _.get("/teacher")},getTeacher(e){return _.get(`/teacher/${e}`)},createTeacher(e){return _.post("/teacher",e)},updateTeacher(e,t){return _.patch(`/teacher/${e}`,t)},deleteTeacher(e){return _.delete(`/teacher/${e}`)}},G={namespaced:!0,state:{teachers:[],totalTeachers:0,loading:!1,error:null},mutations:{SET_TEACHERS(e,t){e.teachers=t},SET_TOTAL_TEACHERS(e,t){e.totalTeachers=t},ADD_TEACHER(e,t){e.teachers.push(t)},UPDATE_TEACHER(e,t){const a=e.teachers.findIndex((e=>e._id===t._id));-1!==a&&e.teachers.splice(a,1,t)},REMOVE_TEACHER(e,t){e.teachers=e.teachers.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t}},actions:{async fetchTeachers({commit:e}){e("SET_LOADING",!0);try{const t=await U.getTeachers();console.log({teacher:t.data.data.teachers}),e("SET_TEACHERS",t.data.data.teachers),e("SET_TOTAL_TEACHERS",t.data.results)}catch(t){throw console.log(t.response),e("SET_ERROR",t.response?.data?.message),t}finally{e("SET_LOADING",!1)}},async createTeacher({commit:e},t){e("SET_LOADING",!0);try{const a=await U.createTeacher(t);return e("ADD_TEACHER",a.data.data.teacher),a.data.data.teacher}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async updateTeacher({commit:e},{id:t,teacherData:a}){e("SET_LOADING",!0);try{const r=await U.updateTeacher(t,a);return e("UPDATE_TEACHER",r.data.data.teacher),r.data.data.teacher}catch(r){throw e("SET_ERROR",r.response?.data?.message),r}finally{e("SET_LOADING",!1)}},async deleteTeacher({commit:e},t){e("SET_LOADING",!0);try{await U.deleteTeacher(t),e("REMOVE_TEACHER",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}}}},j={getSchedules(){return _.get("/class-schedule")},getSchedule(e){return _.get(`/class-schedule/${e}`)},getTeacherSchedule(e){return _.get(`/class-schedule/teacher/${e}`)},createSchedule(e){return _.post("/class-schedule",e)},updateSchedule(e,t){return _.patch(`/class-schedule/${e}`,t)},deleteSchedule(e){return _.delete(`/class-schedule/${e}`)}},v={namespaced:!0,state:{schedules:[],totalSchedules:0,loading:!1,error:null,teacherSchedules:[],groupedSchedules:{}},mutations:{SET_SCHEDULES(e,t){e.schedules=t},SET_TOTAL_SCHEDULES(e,t){e.totalSchedules=t},SET_TEACHER_SCHEDULES(e,t){e.teacherSchedules=t.rawSchedules||[],e.groupedSchedules=t.groupedSchedules||{}},ADD_SCHEDULE(e,t){e.schedules.push(t)},UPDATE_SCHEDULE(e,t){const a=e.schedules.findIndex((e=>e._id===t._id));-1!==a&&e.schedules.splice(a,1,t)},REMOVE_SCHEDULE(e,t){e.schedules=e.schedules.filter((e=>e._id!==t))},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},RESET_STATE(e){e.teacherSchedules=[],e.groupedSchedules={},e.error=null}},actions:{async fetchSchedules({commit:e}){e("SET_LOADING",!0);try{const t=await j.getSchedules();e("SET_SCHEDULES",t.data.data.schedules),e("SET_TOTAL_SCHEDULES",t.data.results)}catch(t){throw e("SET_ERROR",t.response?.data?.message),t}finally{e("SET_LOADING",!1)}},async fetchTeacherSchedules({commit:e},t){e("SET_LOADING",!0),e("SET_ERROR",null);try{const a=await j.getTeacherSchedule(t);e("SET_TEACHER_SCHEDULES",a.data.data.schedule)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch schedules"),a}finally{e("SET_LOADING",!1)}},async createSchedule({commit:e},t){e("SET_LOADING",!0);try{const a=await j.createSchedule(t);return e("ADD_SCHEDULE",a.data.data.schedule),a.data.data.schedule}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}},async updateSchedule({commit:e},{id:t,scheduleData:a}){e("SET_LOADING",!0);try{const r=await j.updateSchedule(t,a);return e("UPDATE_SCHEDULE",r.data.data.schedule),r.data.data.schedule}catch(r){throw e("SET_ERROR",r.response?.data?.message),r}finally{e("SET_LOADING",!1)}},async deleteSchedule({commit:e},t){e("SET_LOADING",!0);try{await j.deleteSchedule(t),e("REMOVE_SCHEDULE",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message),a}finally{e("SET_LOADING",!1)}}},getters:{getSchedulesByDay:e=>t=>(console.log(t),e.groupedSchedules[t]||[]),hasSchedules:e=>e.teacherSchedules.length>0,isLoading:e=>e.loading,getError:e=>e.error}},P={getScheduleReports(e){return _.get("/report/class-schedules",{params:e})}},F={namespaced:!0,state:{scheduleReports:{data:[],total:0},loading:!1,error:null,filters:{course:null,subject:null,teacher:null,weekDay:null,startTime:null,endTime:null}},mutations:{SET_SCHEDULE_REPORTS(e,{schedules:t,total:a}){e.scheduleReports.data=t,e.scheduleReports.total=a},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},SET_FILTERS(e,t){e.filters={...e.filters,...t}},RESET_FILTERS(e){e.filters={course:null,subject:null,teacher:null,weekDay:null,startTime:null,endTime:null}}},actions:{async fetchScheduleReports({commit:e,state:t}){e("SET_LOADING",!0),e("SET_ERROR",null);try{const a={};t.filters.course&&(a.course=t.filters.course),t.filters.subject&&(a.subject=t.filters.subject),t.filters.teacher&&(a.teacher=t.filters.teacher._id||t.filters.teacher),t.filters.weekDay&&(a.weekDay=t.filters.weekDay),t.filters.startTime&&(a.startTime=t.filters.startTime),t.filters.endTime&&(a.endTime=t.filters.endTime);const r=await P.getScheduleReports(a);e("SET_SCHEDULE_REPORTS",{schedules:r.data.data.schedules,total:r.data.data.total})}catch(a){throw console.error("Report fetch error:",a),e("SET_ERROR",a.response?.data?.message||"Failed to fetch schedule reports"),a}finally{e("SET_LOADING",!1)}},updateFilters({commit:e,dispatch:t},a){const r={course:a.course,subject:a.subject,teacher:a.teacher?._id||a.teacher,weekDay:a.weekDay,startTime:a.startTime,endTime:a.endTime};return e("SET_FILTERS",r),t("fetchScheduleReports")},resetFilters({commit:e,dispatch:t}){return e("RESET_FILTERS"),t("fetchScheduleReports")}},getters:{getScheduleReports:e=>e.scheduleReports.data,getTotalReports:e=>e.scheduleReports.total,getLoading:e=>e.loading,getError:e=>e.error,getFilters:e=>e.filters}},k={getAllAttendance(e={}){return _.get("/attendance",{params:e})},getAttendanceById(e){return _.get(`/attendance/${e}`)},createAttendance(e){return _.post("/attendance",e)},updateAttendance(e,t){return _.put(`/attendance/${e}`,t)},deleteAttendance(e){return _.delete(`/attendance/${e}`)},getAttendanceBySchedule(e){return _.get(`/attendance/schedule/${e}`)},getAttendanceByDateRange(e,t){return _.get("/attendance/date-range",{params:{startDate:e,endDate:t}})},getStudentAttendance(e,t,a){return _.get(`/attendance/student/${e}`,{params:{startDate:t,endDate:a}})},updateStudentAttendance(e,t,a){return _.patch(`/attendance/${e}/student/${t}`,{status:a})},getAttendanceStats(e,t,a){return _.get(`/attendance/stats/${e}`,{params:{startDate:t,endDate:a}})},checkExistingAttendance(e,t){return _.get("/attendance/check",{params:{classScheduleId:e,date:t}})}},B={namespaced:!0,state:{attendanceRecords:[],currentAttendance:null,loading:!1,error:null,stats:null},getters:{attendanceRecords:e=>e.attendanceRecords,currentAttendance:e=>e.currentAttendance,loading:e=>e.loading,error:e=>e.error,stats:e=>e.stats},mutations:{SET_ATTENDANCE_RECORDS(e,t){e.attendanceRecords=t},SET_CURRENT_ATTENDANCE(e,t){e.currentAttendance=t},ADD_ATTENDANCE(e,t){e.attendanceRecords.push(t)},UPDATE_ATTENDANCE(e,t){const a=e.attendanceRecords.findIndex((e=>e._id===t._id));-1!==a&&e.attendanceRecords.splice(a,1,t)},REMOVE_ATTENDANCE(e,t){e.attendanceRecords=e.attendanceRecords.filter((e=>e._id!==t))},SET_STATS(e,t){e.stats=t},SET_LOADING(e,t){e.loading=t},SET_ERROR(e,t){e.error=t},CLEAR_ERROR(e){e.error=null}},actions:{async fetchAttendanceRecords({commit:e},t={}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await k.getAllAttendance(t);console.log(a),e("SET_ATTENDANCE_RECORDS",a.data.data.attendance)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch attendance records"),a}finally{e("SET_LOADING",!1)}},async fetchAttendanceById({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await k.getAttendanceById(t);e("SET_CURRENT_ATTENDANCE",a.data.data.attendance)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch attendance"),a}finally{e("SET_LOADING",!1)}},async fetchAttendanceBySchedule({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await k.getAttendanceBySchedule(t);e("SET_ATTENDANCE_RECORDS",a.data.data.attendance)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to fetch schedule attendance"),a}finally{e("SET_LOADING",!1)}},async fetchAttendanceStats({commit:e},{scheduleId:t,startDate:a,endDate:r}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const n=await k.getAttendanceStats(t,a,r);e("SET_STATS",n.data.data.stats)}catch(n){throw e("SET_ERROR",n.response?.data?.message||"Failed to fetch attendance stats"),n}finally{e("SET_LOADING",!1)}},async createAttendance({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const a=await k.createAttendance(t);return e("ADD_ATTENDANCE",a.data.data.attendance),a.data.data.attendance}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to create attendance"),a}finally{e("SET_LOADING",!1)}},async updateAttendance({commit:e},{id:t,attendanceData:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await k.updateAttendance(t,a);return e("UPDATE_ATTENDANCE",r.data.data.attendance),r.data.data.attendance}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to update attendance"),r}finally{e("SET_LOADING",!1)}},async updateStudentAttendance({commit:e},{attendanceId:t,studentId:a,status:r}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const n=await k.updateStudentAttendance(t,a,r);return e("UPDATE_ATTENDANCE",n.data.data.attendance),n.data.data.attendance}catch(n){throw e("SET_ERROR",n.response?.data?.message||"Failed to update student attendance"),n}finally{e("SET_LOADING",!1)}},async deleteAttendance({commit:e},t){try{e("SET_LOADING",!0),e("CLEAR_ERROR"),await k.deleteAttendance(t),e("REMOVE_ATTENDANCE",t)}catch(a){throw e("SET_ERROR",a.response?.data?.message||"Failed to delete attendance"),a}finally{e("SET_LOADING",!1)}},async checkExistingAttendance({commit:e},{classScheduleId:t,date:a}){try{e("SET_LOADING",!0),e("CLEAR_ERROR");const r=await k.checkExistingAttendance(t,a);return r.data.data}catch(r){throw e("SET_ERROR",r.response?.data?.message||"Failed to check existing attendance"),r}finally{e("SET_LOADING",!1)}}}};r.Ay.use(R.Ay);var $=new R.Ay.Store({modules:{auth:A,users:f,dashboard:D,departments:y,courses:N,subjects:C,students:w,teachers:G,schedules:v,reports:F,attendances:B}});r.Ay.use(E.Ay);const H=[{path:"/login",name:"Login",component:()=>Promise.all([a.e(516),a.e(200),a.e(803)]).then(a.bind(a,8803)),meta:{guest:!0}},{path:"/",component:()=>Promise.all([a.e(516),a.e(218),a.e(818),a.e(2)]).then(a.bind(a,3069)),meta:{requiresAuth:!0},children:[{path:"",redirect:"/dashboard"},{path:"/dashboard",name:"Dashboard",component:()=>Promise.all([a.e(516),a.e(363),a.e(165)]).then(a.bind(a,6165))},{path:"/users",name:"Users",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(347)]).then(a.bind(a,1347))},{path:"/profile",name:"Profile",component:()=>Promise.all([a.e(516),a.e(200),a.e(284)]).then(a.bind(a,1284))},{path:"/academics/departments",name:"Departments",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(293)]).then(a.bind(a,8293))},{path:"/academics/courses",name:"Courses",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(351)]).then(a.bind(a,7351))},{path:"/academics/subjects",name:"Subjects",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(82)]).then(a.bind(a,4082))},{path:"/academics/schedules",name:"Schedules",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(363),a.e(646)]).then(a.bind(a,3646))},{path:"/students",name:"Students",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(446),a.e(950)]).then(a.bind(a,4466))},{path:"/teachers",name:"Teacchers",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(363),a.e(446),a.e(815)]).then(a.bind(a,2073))},{path:"/teachers/:id/class-schedule",name:"Class Schedule",component:()=>Promise.all([a.e(516),a.e(218),a.e(921),a.e(363),a.e(296)]).then(a.bind(a,1296))},{path:"/attendance/:id",name:"Attendance",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(363),a.e(446),a.e(356)]).then(a.bind(a,1340))},{path:"/reports",component:()=>Promise.all([a.e(516),a.e(757)]).then(a.bind(a,2757)),children:[{path:"",name:"Reports"},{path:"teachers",name:"TeacherReport",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(609)]).then(a.bind(a,2415)),meta:{title:"Teacher Reports",requiresAuth:!0}},{path:"students",name:"StudentReport",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(992)]).then(a.bind(a,3394)),meta:{title:"Student Reports",requiresAuth:!0}},{path:"schedules",name:"ScheduleReport",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(363),a.e(11)]).then(a.bind(a,7057)),meta:{title:"Class Schedule Reports",requiresAuth:!0}},{path:"attendances",name:"AttendanceReport",component:()=>Promise.all([a.e(516),a.e(200),a.e(218),a.e(818),a.e(921),a.e(814),a.e(221),a.e(363),a.e(446),a.e(481)]).then(a.bind(a,3411)),meta:{title:"Attendance Reports",requiresAuth:!0}}]}]}],M=new E.Ay({mode:"history",base:"/",routes:H});M.beforeEach(((e,t,a)=>{const r=e.matched.some((e=>e.meta.requiresAuth)),n=$.getters["auth/isAuthenticated"];console.log(r,n),console.log("auth"),r&&!n?a("/login"):e.meta.guest&&n?a("/dashboard"):a()}));var x=M,V=a(3971);r.Ay.use(V.A);var J=new V.A({theme:{themes:{light:{primary:"#1976D2",secondary:"#424242",accent:"#82B1FF",error:"#FF5252",info:"#2196F3",success:"#4CAF50",warning:"#FFC107"}}},icons:{iconfont:"mdi"}}),q=a(7588),K=a.n(q);r.Ay.config.productionTip=!1,r.Ay.use(K()),r.Ay.component("apexchart",K()),new r.Ay({router:x,store:$,vuetify:J,render:e=>e(i)}).$mount("#app")}},t={};function a(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,a),s.loaded=!0,s.exports}a.m=e,function(){var e=[];a.O=function(t,r,n,s){if(!r){var c=1/0;for(l=0;l<e.length;l++){r=e[l][0],n=e[l][1],s=e[l][2];for(var o=!0,d=0;d<r.length;d++)(!1&s||c>=s)&&Object.keys(a.O).every((function(e){return a.O[e](r[d])}))?r.splice(d--,1):(o=!1,s<c&&(c=s));if(o){e.splice(l--,1);var u=n();void 0!==u&&(t=u)}}return t}s=s||0;for(var l=e.length;l>0&&e[l-1][2]>s;l--)e[l]=e[l-1];e[l]=[r,n,s]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};a.t=function(r,n){if(1&n&&(r=this(r)),8&n)return r;if("object"===typeof r&&r){if(4&n&&r.__esModule)return r;if(16&n&&"function"===typeof r.then)return r}var s=Object.create(null);a.r(s);var c={};e=e||[null,t({}),t([]),t(t)];for(var o=2&n&&r;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((function(e){c[e]=function(){return r[e]}}));return c["default"]=function(){return r},a.d(s,c),s}}(),function(){a.d=function(e,t){for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,r){return a.f[r](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/"+e+"."+{2:"b5c5a2eb",11:"230c87d5",82:"0ddacf5f",165:"db9888cd",200:"abc6a680",218:"5c1d8afc",221:"3048c58c",284:"96ea303b",293:"df4a2dce",296:"46bb4fb4",347:"ec4335c0",351:"a67fcaba",354:"c167d4b3",356:"6c6123fe",363:"d451ab32",446:"65fb37a4",480:"cdcbf6cf",481:"fe3a6ce6",516:"d34a9f5f",609:"df50ea18",646:"d9ced7f8",757:"d42d88fa",803:"9b6d2e7c",814:"8b2ae935",815:"3c17efeb",818:"956d8632",838:"97f902f2",921:"44621a44",950:"424cef3a",992:"52c5e9b9"}[e]+".js"}}(),function(){a.miniCssF=function(e){return"css/"+e+"."+{2:"f074ebdb",11:"4b09cbf1",82:"d331673b",165:"c066eafb",200:"7088f8bd",221:"9b18c5aa",284:"1fcb36d5",293:"bf94a50f",296:"f6a3e06f",347:"231fc3a1",351:"d331673b",356:"a91d4411",481:"7a371f5f",516:"3fb86192",609:"3855c279",646:"e2cda383",757:"a7961344",803:"44e02de1",815:"f5c3cc64",921:"6b1501e6",950:"35ee9046",992:"08a0e155"}[e]+".css"}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="client:";a.l=function(r,n,s,c){if(e[r])e[r].push(n);else{var o,d;if(void 0!==s)for(var u=document.getElementsByTagName("script"),l=0;l<u.length;l++){var i=u[l];if(i.getAttribute("src")==r||i.getAttribute("data-webpack")==t+s){o=i;break}}o||(d=!0,o=document.createElement("script"),o.charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.setAttribute("data-webpack",t+s),o.src=r),e[r]=[n];var E=function(t,a){o.onerror=o.onload=null,clearTimeout(R);var n=e[r];if(delete e[r],o.parentNode&&o.parentNode.removeChild(o),n&&n.forEach((function(e){return e(a)})),t)return t(a)},R=setTimeout(E.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=E.bind(null,o.onerror),o.onload=E.bind(null,o.onload),d&&document.head.appendChild(o)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){a.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,t,r,n,s){var c=document.createElement("link");c.rel="stylesheet",c.type="text/css",a.nc&&(c.nonce=a.nc);var o=function(a){if(c.onerror=c.onload=null,"load"===a.type)n();else{var r=a&&a.type,o=a&&a.target&&a.target.href||t,d=new Error("Loading CSS chunk "+e+" failed.\n("+r+": "+o+")");d.name="ChunkLoadError",d.code="CSS_CHUNK_LOAD_FAILED",d.type=r,d.request=o,c.parentNode&&c.parentNode.removeChild(c),s(d)}};return c.onerror=c.onload=o,c.href=t,r?r.parentNode.insertBefore(c,r.nextSibling):document.head.appendChild(c),c},t=function(e,t){for(var a=document.getElementsByTagName("link"),r=0;r<a.length;r++){var n=a[r],s=n.getAttribute("data-href")||n.getAttribute("href");if("stylesheet"===n.rel&&(s===e||s===t))return n}var c=document.getElementsByTagName("style");for(r=0;r<c.length;r++){n=c[r],s=n.getAttribute("data-href");if(s===e||s===t)return n}},r=function(r){return new Promise((function(n,s){var c=a.miniCssF(r),o=a.p+c;if(t(c,o))return n();e(r,o,null,n,s)}))},n={524:0};a.f.miniCss=function(e,t){var a={2:1,11:1,82:1,165:1,200:1,221:1,284:1,293:1,296:1,347:1,351:1,356:1,481:1,516:1,609:1,646:1,757:1,803:1,815:1,921:1,950:1,992:1};n[e]?t.push(n[e]):0!==n[e]&&a[e]&&t.push(n[e]=r(e).then((function(){n[e]=0}),(function(t){throw delete n[e],t})))}}}(),function(){var e={524:0};a.f.j=function(t,r){var n=a.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else if(/^[29]21$/.test(t))e[t]=0;else{var s=new Promise((function(a,r){n=e[t]=[a,r]}));r.push(n[2]=s);var c=a.p+a.u(t),o=new Error,d=function(r){if(a.o(e,t)&&(n=e[t],0!==n&&(e[t]=void 0),n)){var s=r&&("load"===r.type?"missing":r.type),c=r&&r.target&&r.target.src;o.message="Loading chunk "+t+" failed.\n("+s+": "+c+")",o.name="ChunkLoadError",o.type=s,o.request=c,n[1](o)}};a.l(c,d,"chunk-"+t,t)}},a.O.j=function(t){return 0===e[t]};var t=function(t,r){var n,s,c=r[0],o=r[1],d=r[2],u=0;if(c.some((function(t){return 0!==e[t]}))){for(n in o)a.o(o,n)&&(a.m[n]=o[n]);if(d)var l=d(a)}for(t&&t(r);u<c.length;u++)s=c[u],a.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return a.O(l)},r=self["webpackChunkclient"]=self["webpackChunkclient"]||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))}();var r=a.O(void 0,[504],(function(){return a(9899)}));r=a.O(r)})();
//# sourceMappingURL=app.8e1d3510.js.map